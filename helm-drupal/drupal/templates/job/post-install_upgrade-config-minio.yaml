{{- if (and .Values.minio.enabled .Values.minio.defaultBucket.enabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "drupal.fullname" . }}-config-minio
  labels:
    app.kubernetes.io/name: {{ include "drupal.name" . }}
    helm.sh/chart: {{ include "drupal.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "drupal.name" . }}
        helm.sh/chart: {{ include "drupal.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: OnFailure
{{- if .Values.minio.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.minio.nodeSelector | indent 8 }}
{{- end }}
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: {{ template "drupal.fullname" . }}-minio-init
            - secret:
                name: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ .Release.Name }}-minio{{ end }}
        {{- if .Values.minio.tls.enabled }}
        - name: cert-secret-volume-mc
          secret:
            secretName: {{ .Values.minio.tls.certSecret }}
            items:
            - key: {{ .Values.minio.tls.publicCrt }}
              path: CAs/public.crt
        {{ end }}
      containers:
      - name: minio-mc
        image: "{{ .Values.minio.mcImage.repository }}:{{ .Values.minio.mcImage.tag }}"
        imagePullPolicy: {{ .Values.minio.mcImage.pullPolicy }}
        command:
          - '/bin/sh'
          - '/config/initialize'
        env:
          - name: MINIO_ENDPOINT
            value: {{ .Release.Name }}-minio
          - name: MINIO_PORT
            value: {{ .Values.minio.service.port | quote }}
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
          {{- if .Values.minio.tls.enabled }}
          - name: cert-secret-volume-mc
            mountPath: {{ .Values.minio.configPathmc }}certs
          {{ end }}
{{- end }}
