apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "indexer.fullname" . }}
  labels:
{{ include "indexer.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "indexer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "indexer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "indexer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            exec:
              # Check using command
              # command: ["mysql", "-h", "localhost", "-u", "Norconex", "-pPASSWORD", "awr_schema"]
              command: 
                - echo
                - "Override using mysql command to check, assumed good."
              #initialDelayseconds: 120
              #periodSeconds: 30
              #timeoutSeconds: 5
            #httpGet:
            #  path: /
            #  port: http
          readinessProbe:
            exec:
              # Check using command
              # command: ["mysql", "-h", "localhost", "-u", "Norconex", "-pPASSWORD", "awr_schema"]
              command: 
                - echo
                - "Override using mysql command to check, assumed good."
              #initialDelaySeconds: 120
              #periodSeconds: 10
              #timeoutSeconds: 5
            #httpGet:
            #  path: /
            #  port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
